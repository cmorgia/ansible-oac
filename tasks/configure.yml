---

#
# Prepare environment and properties variables
#

- name: Copy environments and properties files
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: "{{ oracle.user }}"
    group: "{{ oracle.group }}"
  with_items:
    - { src: oac_set_environment_variables.sh.j2 , dest: "{{ oac.scripts_dir }}/oac_set_environment_variables.sh" }
    - { src: oac_environment.properties.j2, dest: "{{ oac.config_dir }}/oac_environment.properties" }

#
# Create and configure the OAC domain
#

- name: Create the OAC domain
  shell: "{{ middleware_home_dir }}/oracle_common/common/bin/unpack.sh -template=/vagrant/files/who_oac_custom_template.jar -domain={{  oac_domain_home }} -user_name={{  oac_admin_username }} -password={{  oac_admin_password }} -log_priority=debug -log={{ oac.logs_dir }}/create_oac_domain_$(date +'%F').log 2>&1"
  register: create_domain_cmd


- name: Create AdminServer securtiy directory
  file:
    path: "{{ oac_domain_home }}/servers/AdminServer/security"
    state: directory
    owner: "{{ oracle.user }}"
    group: "{{ oracle.group }}"

- name: Create NodeManager  directory
  file:
    path: "{{ oac_nodemanager_home }}"
    state: directory
    owner: "{{ oracle.user }}"
    group: "{{ oracle.group }}"

- name: Copy AdminServer and Nodemanager properties files
  template:
    src:  "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: "{{ oracle.user }}"
    group: "{{ oracle.group }}"
  with_items:
    - { src: boot.properties.j2, dest: "{{ oac_domain_home }}/servers/AdminServer/security/boot.properties" }
    - { src: nodemanager.properties.j2, dest: "{{ oac_nodemanager_home }}/nodemanager.properties" }
    - { src: setUserOverrides.sh.j2, dest: "{{ oac_domain_home }}/bin/setUserOverrides.sh" }

#
# Configure the Nodemanager as a systemd service
#

- name: Copy NodeManager systemd script
  template:
    src: nodemanager.service.j2
    dest: /etc/systemd/system/nodemanager-oac.service
    mode: 0664
  when: ansible_virtualization_type != 'docker'
  become: yes
  become_user: root
  
- name: Enable Nodemanager service
  service:
    name: nodemanager-oac
    enabled: yes
  when: ansible_virtualization_type != 'docker'
  become: yes
  become_user: root
  
- set_fact:
    oac_already_configured: true
  when: create_domain_cmd.rc == 0

